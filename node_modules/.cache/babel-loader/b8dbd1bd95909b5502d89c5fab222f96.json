{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\trydo\\\\src\\\\elements\\\\Product.jsx\";\n\nconst Product = ({\n  match,\n  data\n}) => {\n  var product = data.find(p => p.id == match.params.id);\n  var productData;\n  if (product) productData =\n  /*#__PURE__*/\n  React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  },\n  /*#__PURE__*/\n  React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 11\n    }\n  }, \" \", product.title, \" \"),\n  /*#__PURE__*/\n  React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 11\n    }\n  }),\n  /*#__PURE__*/\n  React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 11\n    }\n  }),\n  /*#__PURE__*/\n  React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 11\n    }\n  }), \" \");else productData =\n  /*#__PURE__*/\n  React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 24\n    }\n  }, \" Sorry. Product doesn't exist \");\n  return (\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, productData))\n  );\n};","map":{"version":3,"sources":["C:\\Project\\trydo\\src\\elements\\Product.jsx"],"names":["Product","match","data","product","find","p","id","params","productData","title"],"mappings":";;AAAA,MAAMA,OAAO,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAqB;AACjC,MAAIC,OAAO,GAAGD,IAAI,CAACE,IAAL,CAAUC,CAAC,IAAIA,CAAC,CAACC,EAAF,IAAQL,KAAK,CAACM,MAAN,CAAaD,EAApC,CAAd;AACA,MAAIE,WAAJ;AAEA,MAAIL,OAAJ,EACEK,WAAW;AAAA;AACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAML,OAAO,CAACM,KAAd,MADF;AAAA;AAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF;AAAA;AAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF;AAAA;AAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAIY,GAJZ,CADF,CADF,KASKD,WAAW;AAAA;AAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAd;AAEL;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMA,WAAN,CADF;AADF;AAKD,CApBH","sourcesContent":["const Product = ({ match, data }) => {\r\n    var product = data.find(p => p.id == match.params.id);\r\n    var productData;\r\n  \r\n    if (product)\r\n      productData = (\r\n        <div>\r\n          <h3> {product.title} </h3>\r\n          <p></p>\r\n          <hr />\r\n          <h4></h4>{\" \"}\r\n        </div>\r\n      );\r\n    else productData = <h2> Sorry. Product doesn't exist </h2>;\r\n  \r\n    return (\r\n      <div>\r\n        <div>{productData}</div>\r\n      </div>\r\n    );\r\n  };"]},"metadata":{},"sourceType":"module"}